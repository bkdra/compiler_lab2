State 56 conflicts: 1 shift/reduce


Grammar

    0 $accept: lines $end

    1 lines: start_structures

    2 start_structures: ε
    3                 | start_structure start_structures

    4 start_structure: class_declaration

    5 variable_declaration: STATIC type id_list SEMICOLON
    6                     | type id_list end_of_line

    7 $@1: ε

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW type LBRACKET INT_LIT RBRACKET SEMICOLON
    9                     | FINAL type id_list_const SEMICOLON

   10 type: INT
   11     | FLOAT
   12     | BOOL
   13     | STRING
   14     | SHORT
   15     | LONG
   16     | VOID
   17     | CHAR

   18 wrong_EOF: ADD
   19          | INC
   20          | MINUS
   21          | DEC
   22          | MUL
   23          | DIV
   24          | MOD
   25          | AND
   26          | OR
   27          | NOT
   28          | EQ
   29          | NE
   30          | LT
   31          | LE
   32          | GT
   33          | GE
   34          | ASSIGN
   35          | BOOL
   36          | BREAK
   37          | BUTE
   38          | CASE
   39          | CATCH
   40          | CLASS
   41          | CONST
   42          | CONTINUE
   43          | DEFAULT
   44          | DO
   45          | DOUBLE
   46          | ELSE
   47          | EXTENDS
   48          | FALSE
   49          | FINAL
   50          | FINALLY
   51          | FLOAT
   52          | FOR
   53          | IF
   54          | IMPLEMENTS
   55          | INT
   56          | LONG
   57          | MAIN
   58          | NEW
   59          | PRINT
   60          | PRIVATE
   61          | PROTECTED
   62          | PUBLIC
   63          | RETURN
   64          | SHORT
   65          | STATIC
   66          | STRING
   67          | SWITCH
   68          | THIS
   69          | TRUE
   70          | TRY
   71          | VOID
   72          | WHILE
   73          | COMMA
   74          | COLON
   75          | LPAREN
   76          | RPAREN
   77          | LBRACKET
   78          | RBRACKET
   79          | LBRACE
   80          | RBRACE
   81          | INT_LIT
   82          | FLOAT_LIT
   83          | STRING_LIT
   84          | ABSTRACT
   85          | DOT
   86          | READ
   87          | CHAR
   88          | ID_TOK

   89 end_of_line: SEMICOLON
   90            | error wrong_EOF

   91 id_item: ID_TOK

   92 $@2: ε

   93 id_item: ID_TOK $@2 ASSIGN const_expr

   94 id_list: id_item
   95        | id_item COMMA id_list
   96        | id_item error wrongIDlist

   97 wrongIDlist: ID_TOK
   98            | INT_LIT
   99            | STRING_LIT
  100            | FLOAT_LIT
  101            | SEMICOLON

  102 $@3: ε

  103 id_list_const: ID_TOK $@3 ASSIGN const_expr

  104 $@4: ε

  105 id_list_const: id_list_const COMMA ID_TOK $@4 ASSIGN const_expr

  106 $@5: ε

  107 class_declaration: class_modifier CLASS ID_TOK $@5 super interface class_body

  108 class_modifier: ε
  109               | PUBLIC
  110               | ABSTRACT
  111               | FINAL

  112 super: ε
  113      | EXTENDS ID_TOK

  114 interface: ε
  115          | IMPLEMENTS interface_type_list

  116 interface_type_list: ID_TOK
  117                    | interface_type_list COMMA ID_TOK

  118 $@6: ε

  119 class_body: LBRACE $@6 class_body_declaration RBRACE

  120 class_body_declaration: fields
  121                       | method
  122                       | fields class_body_declaration
  123                       | method class_body_declaration
  124                       | error SEMICOLON

  125 fields: class_fields
  126       | instance_fields
  127       | object_declaration

  128 class_fields: STATIC type id_list SEMICOLON

  129 instance_fields: type id_list end_of_line
  130                | FINAL type id_list_const SEMICOLON
  131                | type LBRACKET RBRACKET ID_TOK ASSIGN NEW type LBRACKET INT_LIT RBRACKET end_of_line

  132 $@7: ε

  133 method: method_modifier type ID_TOK $@7 LPAREN formal_arguments RPAREN compound_statement

  134 $@8: ε

  135 method: type ID_TOK $@8 LPAREN formal_arguments RPAREN compound_statement

  136 $@9: ε

  137 method: ID_TOK $@9 LPAREN formal_arguments RPAREN compound_statement

  138 method_modifier: PUBLIC
  139                | PROTECTED
  140                | PRIVATE

  141 formal_arguments: ε
  142                 | param_list

  143 param_list: type ID_TOK
  144           | param_list COMMA type ID_TOK

  145 statement: compound_statement
  146          | simple_statement
  147          | conditional_statement
  148          | loop_statement
  149          | ELSE statement

  150 $@10: ε

  151 compound_statement: LBRACE $@10 compound_statement_body RBRACE

  152 compound_statement_body: ε
  153                        | variable_declaration compound_statement_body
  154                        | statement compound_statement_body
  155                        | object_declaration compound_statement_body
  156                        | return_statement
  157                        | class_declaration
  158                        | ID_TOK
  159                        | error SEMICOLON

  160 $@11: ε

  161 object_declaration: ID_TOK ID_TOK $@11 end_of_line

  162 $@12: ε

  163 object_declaration: ID_TOK ID_TOK $@12 ASSIGN NEW ID_TOK LPAREN RPAREN end_of_line

  164 simple_statement: name ASSIGN expression SEMICOLON
  165                 | PRINT LPAREN expression RPAREN end_of_line
  166                 | READ LPAREN name RPAREN end_of_line
  167                 | expression end_of_line
  168                 | SEMICOLON

  169 name: ID_TOK
  170     | field_or_array_item

  171 field_or_array_item: ID_TOK DOT ID_TOK
  172                    | array_item

  173 array_item: ID_TOK LBRACKET INT_LIT RBRACKET
  174           | ID_TOK LBRACKET ID_TOK RBRACKET

  175 const_expr: const_term
  176           | const_expr ADD const_term
  177           | const_expr MINUS const_term

  178 const_term: const_factor
  179           | const_term MUL const_factor
  180           | const_term DIV const_factor

  181 const_factor: INT_LIT
  182             | FLOAT_LIT
  183             | STRING_LIT
  184             | TRUE
  185             | FALSE
  186             | ID_TOK
  187             | method_invocation

  188 expression: term
  189           | expression ADD term
  190           | expression MINUS term

  191 term: factor
  192     | term MUL factor
  193     | term DIV factor

  194 factor: ID_TOK
  195       | INT_LIT
  196       | FLOAT_LIT
  197       | STRING_LIT
  198       | TRUE
  199       | FALSE
  200       | LPAREN expression RPAREN
  201       | prefixOP name
  202       | name postfixOP
  203       | INT_LIT postfixOP
  204       | method_invocation
  205       | ID_TOK DOT ID_TOK
  206       | array_item

  207 prefixOP: INC
  208         | DEC
  209         | ADD
  210         | MINUS

  211 postfixOP: INC
  212          | DEC

  213 method_invocation: name LPAREN arguments RPAREN

  214 arguments: ε
  215          | arg_list

  216 arg_list: expression
  217         | arg_list COMMA expression

  218 conditional_statement: IF LPAREN boolean_expr RPAREN if_else_loop_statement
  219                      | IF LPAREN boolean_expr RPAREN if_else_loop_statement else
  220                      | IF LPAREN error RPAREN

  221 else: ELSE if_else_loop_statement

  222 boolean_expr: expression infixOP expression

  223 infixOP: EQ
  224        | NE
  225        | LT
  226        | LE
  227        | GT
  228        | GE

  229 if_else_loop_statement: simple_statement
  230                       | compound_statement

  231 loop_statement: while
  232               | for

  233 while: WHILE LPAREN boolean_expr RPAREN if_else_loop_statement
  234      | error RPAREN

  235 for: FOR LPAREN forInitOpt SEMICOLON boolean_expr SEMICOLON forUpdateOpt RPAREN if_else_loop_statement

  236 forInitOpt: ε
  237           | init_list

  238 init_item: name ASSIGN expression
  239          | INT ID_TOK ASSIGN expression

  240 init_list: init_item
  241          | init_list COMMA init_item

  242 forUpdateOpt: name INC
  243             | name DEC

  244 return_statement: RETURN expression SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256) 90 96 124 159 220 234
    ADD (258) 18 176 189 209
    INC (259) 19 207 211 242
    MINUS (260) 20 177 190 210
    DEC (261) 21 208 212 243
    MUL (262) 22 179 192
    DIV (263) 23 180 193
    MOD (264) 24
    AND (265) 25
    OR (266) 26
    NOT (267) 27
    EQ (268) 28 223
    NE (269) 29 224
    LT (270) 30 225
    LE (271) 31 226
    GT (272) 32 227
    GE (273) 33 228
    ASSIGN (274) 8 34 93 103 105 131 163 164 238 239
    BOOL (275) 12 35
    BREAK (276) 36
    BUTE (277) 37
    CASE (278) 38
    CATCH (279) 39
    CLASS (280) 40 107
    CONST (281) 41
    CONTINUE (282) 42
    DEFAULT (283) 43
    DO (284) 44
    DOUBLE (285) 45
    ELSE (286) 46 149 221
    EXTENDS (287) 47 113
    FALSE (288) 48 185 199
    FINAL (289) 9 49 111 130
    FINALLY (290) 50
    FLOAT (291) 11 51
    FOR (292) 52 235
    IF (293) 53 218 219 220
    IMPLEMENTS (294) 54 115
    INT (295) 10 55 239
    LONG (296) 15 56
    MAIN (297) 57
    NEW (298) 8 58 131 163
    PRINT (299) 59 165
    PRIVATE (300) 60 140
    PROTECTED (301) 61 139
    PUBLIC (302) 62 109 138
    RETURN (303) 63 244
    SHORT (304) 14 64
    STATIC (305) 5 65 128
    STRING (306) 13 66
    SWITCH (307) 67
    THIS (308) 68
    TRUE (309) 69 184 198
    TRY (310) 70
    VOID (311) 16 71
    WHILE (312) 72 233
    COMMA (313) 73 95 105 117 144 217 241
    COLON (314) 74
    SEMICOLON (315) 5 8 9 89 101 124 128 130 159 164 168 235 244
    LPAREN (316) 75 133 135 137 163 165 166 200 213 218 219 220 233 235
    RPAREN (317) 76 133 135 137 163 165 166 200 213 218 219 220 233 234 235
    LBRACKET (318) 8 77 131 173 174
    RBRACKET (319) 8 78 131 173 174
    LBRACE (320) 79 119 151
    RBRACE (321) 80 119 151
    INT_LIT (322) 8 81 98 131 173 181 195 203
    FLOAT_LIT (323) 82 100 182 196
    STRING_LIT (324) 83 99 183 197
    ABSTRACT (325) 84 110
    DOT (326) 85 171 205
    READ (327) 86 166
    CHAR (328) 17 87
    ID_TOK <stringVal> (329) 8 88 91 93 97 103 105 107 113 116 117 131 133 135 137 143 144 158 161 163 169 171 173 174 186 194 205 239
    LOWER_THAN_ELSE (330)


Nonterminals, with rules where they appear

    $accept (76)
        on left: 0
    lines (77)
        on left: 1
        on right: 0
    start_structures (78)
        on left: 2 3
        on right: 1 3
    start_structure (79)
        on left: 4
        on right: 3
    variable_declaration (80)
        on left: 5 6 8 9
        on right: 153
    $@1 (81)
        on left: 7
        on right: 8
    type (82)
        on left: 10 11 12 13 14 15 16 17
        on right: 5 6 8 9 128 129 130 131 133 135 143 144
    wrong_EOF (83)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
        on right: 90
    end_of_line (84)
        on left: 89 90
        on right: 6 129 131 161 163 165 166 167
    id_item (85)
        on left: 91 93
        on right: 94 95 96
    $@2 (86)
        on left: 92
        on right: 93
    id_list (87)
        on left: 94 95 96
        on right: 5 6 95 128 129
    wrongIDlist (88)
        on left: 97 98 99 100 101
        on right: 96
    id_list_const (89)
        on left: 103 105
        on right: 9 105 130
    $@3 (90)
        on left: 102
        on right: 103
    $@4 (91)
        on left: 104
        on right: 105
    class_declaration (92)
        on left: 107
        on right: 4 157
    $@5 (93)
        on left: 106
        on right: 107
    class_modifier (94)
        on left: 108 109 110 111
        on right: 107
    super (95)
        on left: 112 113
        on right: 107
    interface (96)
        on left: 114 115
        on right: 107
    interface_type_list (97)
        on left: 116 117
        on right: 115 117
    class_body (98)
        on left: 119
        on right: 107
    $@6 (99)
        on left: 118
        on right: 119
    class_body_declaration (100)
        on left: 120 121 122 123 124
        on right: 119 122 123
    fields (101)
        on left: 125 126 127
        on right: 120 122
    class_fields (102)
        on left: 128
        on right: 125
    instance_fields (103)
        on left: 129 130 131
        on right: 126
    method (104)
        on left: 133 135 137
        on right: 121 123
    $@7 (105)
        on left: 132
        on right: 133
    $@8 (106)
        on left: 134
        on right: 135
    $@9 (107)
        on left: 136
        on right: 137
    method_modifier (108)
        on left: 138 139 140
        on right: 133
    formal_arguments (109)
        on left: 141 142
        on right: 133 135 137
    param_list (110)
        on left: 143 144
        on right: 142 144
    statement (111)
        on left: 145 146 147 148 149
        on right: 149 154
    compound_statement (112)
        on left: 151
        on right: 133 135 137 145 230
    $@10 (113)
        on left: 150
        on right: 151
    compound_statement_body (114)
        on left: 152 153 154 155 156 157 158 159
        on right: 151 153 154 155
    object_declaration (115)
        on left: 161 163
        on right: 127 155
    $@11 (116)
        on left: 160
        on right: 161
    $@12 (117)
        on left: 162
        on right: 163
    simple_statement (118)
        on left: 164 165 166 167 168
        on right: 146 229
    name (119)
        on left: 169 170
        on right: 164 166 201 202 213 238 242 243
    field_or_array_item (120)
        on left: 171 172
        on right: 170
    array_item (121)
        on left: 173 174
        on right: 172 206
    const_expr (122)
        on left: 175 176 177
        on right: 93 103 105 176 177
    const_term (123)
        on left: 178 179 180
        on right: 175 176 177 179 180
    const_factor (124)
        on left: 181 182 183 184 185 186 187
        on right: 178 179 180
    expression (125)
        on left: 188 189 190
        on right: 164 165 167 189 190 200 216 217 222 238 239 244
    term (126)
        on left: 191 192 193
        on right: 188 189 190 192 193
    factor (127)
        on left: 194 195 196 197 198 199 200 201 202 203 204 205 206
        on right: 191 192 193
    prefixOP (128)
        on left: 207 208 209 210
        on right: 201
    postfixOP (129)
        on left: 211 212
        on right: 202 203
    method_invocation (130)
        on left: 213
        on right: 187 204
    arguments (131)
        on left: 214 215
        on right: 213
    arg_list (132)
        on left: 216 217
        on right: 215 217
    conditional_statement (133)
        on left: 218 219 220
        on right: 147
    else (134)
        on left: 221
        on right: 219
    boolean_expr (135)
        on left: 222
        on right: 218 219 233 235
    infixOP (136)
        on left: 223 224 225 226 227 228
        on right: 222
    if_else_loop_statement (137)
        on left: 229 230
        on right: 218 219 221 233 235
    loop_statement (138)
        on left: 231 232
        on right: 148
    while (139)
        on left: 233 234
        on right: 231
    for (140)
        on left: 235
        on right: 232
    forInitOpt (141)
        on left: 236 237
        on right: 235
    init_item (142)
        on left: 238 239
        on right: 240 241
    init_list (143)
        on left: 240 241
        on right: 237 241
    forUpdateOpt (144)
        on left: 242 243
        on right: 235
    return_statement (145)
        on left: 244
        on right: 156


State 0

    0 $accept: • lines $end

    FINAL     shift, and go to state 1
    PUBLIC    shift, and go to state 2
    ABSTRACT  shift, and go to state 3

    CLASS     reduce using rule 108 (class_modifier)
    $default  reduce using rule 2 (start_structures)

    lines              go to state 4
    start_structures   go to state 5
    start_structure    go to state 6
    class_declaration  go to state 7
    class_modifier     go to state 8


State 1

  111 class_modifier: FINAL •

    $default  reduce using rule 111 (class_modifier)


State 2

  109 class_modifier: PUBLIC •

    $default  reduce using rule 109 (class_modifier)


State 3

  110 class_modifier: ABSTRACT •

    $default  reduce using rule 110 (class_modifier)


State 4

    0 $accept: lines • $end

    $end  shift, and go to state 9


State 5

    1 lines: start_structures •

    $default  reduce using rule 1 (lines)


State 6

    3 start_structures: start_structure • start_structures

    FINAL     shift, and go to state 1
    PUBLIC    shift, and go to state 2
    ABSTRACT  shift, and go to state 3

    CLASS     reduce using rule 108 (class_modifier)
    $default  reduce using rule 2 (start_structures)

    start_structures   go to state 10
    start_structure    go to state 6
    class_declaration  go to state 7
    class_modifier     go to state 8


State 7

    4 start_structure: class_declaration •

    $default  reduce using rule 4 (start_structure)


State 8

  107 class_declaration: class_modifier • CLASS ID_TOK $@5 super interface class_body

    CLASS  shift, and go to state 11


State 9

    0 $accept: lines $end •

    $default  accept


State 10

    3 start_structures: start_structure start_structures •

    $default  reduce using rule 3 (start_structures)


State 11

  107 class_declaration: class_modifier CLASS • ID_TOK $@5 super interface class_body

    ID_TOK  shift, and go to state 12


State 12

  107 class_declaration: class_modifier CLASS ID_TOK • $@5 super interface class_body

    $default  reduce using rule 106 ($@5)

    $@5  go to state 13


State 13

  107 class_declaration: class_modifier CLASS ID_TOK $@5 • super interface class_body

    EXTENDS  shift, and go to state 14

    $default  reduce using rule 112 (super)

    super  go to state 15


State 14

  113 super: EXTENDS • ID_TOK

    ID_TOK  shift, and go to state 16


State 15

  107 class_declaration: class_modifier CLASS ID_TOK $@5 super • interface class_body

    IMPLEMENTS  shift, and go to state 17

    $default  reduce using rule 114 (interface)

    interface  go to state 18


State 16

  113 super: EXTENDS ID_TOK •

    $default  reduce using rule 113 (super)


State 17

  115 interface: IMPLEMENTS • interface_type_list

    ID_TOK  shift, and go to state 19

    interface_type_list  go to state 20


State 18

  107 class_declaration: class_modifier CLASS ID_TOK $@5 super interface • class_body

    LBRACE  shift, and go to state 21

    class_body  go to state 22


State 19

  116 interface_type_list: ID_TOK •

    $default  reduce using rule 116 (interface_type_list)


State 20

  115 interface: IMPLEMENTS interface_type_list •
  117 interface_type_list: interface_type_list • COMMA ID_TOK

    COMMA  shift, and go to state 23

    $default  reduce using rule 115 (interface)


State 21

  119 class_body: LBRACE • $@6 class_body_declaration RBRACE

    $default  reduce using rule 118 ($@6)

    $@6  go to state 24


State 22

  107 class_declaration: class_modifier CLASS ID_TOK $@5 super interface class_body •

    $default  reduce using rule 107 (class_declaration)


State 23

  117 interface_type_list: interface_type_list COMMA • ID_TOK

    ID_TOK  shift, and go to state 25


State 24

  119 class_body: LBRACE $@6 • class_body_declaration RBRACE

    error      shift, and go to state 26
    BOOL       shift, and go to state 27
    FINAL      shift, and go to state 28
    FLOAT      shift, and go to state 29
    INT        shift, and go to state 30
    LONG       shift, and go to state 31
    PRIVATE    shift, and go to state 32
    PROTECTED  shift, and go to state 33
    PUBLIC     shift, and go to state 34
    SHORT      shift, and go to state 35
    STATIC     shift, and go to state 36
    STRING     shift, and go to state 37
    VOID       shift, and go to state 38
    CHAR       shift, and go to state 39
    ID_TOK     shift, and go to state 40

    type                    go to state 41
    class_body_declaration  go to state 42
    fields                  go to state 43
    class_fields            go to state 44
    instance_fields         go to state 45
    method                  go to state 46
    method_modifier         go to state 47
    object_declaration      go to state 48


State 25

  117 interface_type_list: interface_type_list COMMA ID_TOK •

    $default  reduce using rule 117 (interface_type_list)


State 26

  124 class_body_declaration: error • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 27

   12 type: BOOL •

    $default  reduce using rule 12 (type)


State 28

  130 instance_fields: FINAL • type id_list_const SEMICOLON

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    type  go to state 50


State 29

   11 type: FLOAT •

    $default  reduce using rule 11 (type)


State 30

   10 type: INT •

    $default  reduce using rule 10 (type)


State 31

   15 type: LONG •

    $default  reduce using rule 15 (type)


State 32

  140 method_modifier: PRIVATE •

    $default  reduce using rule 140 (method_modifier)


State 33

  139 method_modifier: PROTECTED •

    $default  reduce using rule 139 (method_modifier)


State 34

  138 method_modifier: PUBLIC •

    $default  reduce using rule 138 (method_modifier)


State 35

   14 type: SHORT •

    $default  reduce using rule 14 (type)


State 36

  128 class_fields: STATIC • type id_list SEMICOLON

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    type  go to state 51


State 37

   13 type: STRING •

    $default  reduce using rule 13 (type)


State 38

   16 type: VOID •

    $default  reduce using rule 16 (type)


State 39

   17 type: CHAR •

    $default  reduce using rule 17 (type)


State 40

  137 method: ID_TOK • $@9 LPAREN formal_arguments RPAREN compound_statement
  161 object_declaration: ID_TOK • ID_TOK $@11 end_of_line
  163                   | ID_TOK • ID_TOK $@12 ASSIGN NEW ID_TOK LPAREN RPAREN end_of_line

    ID_TOK  shift, and go to state 52

    $default  reduce using rule 136 ($@9)

    $@9  go to state 53


State 41

  129 instance_fields: type • id_list end_of_line
  131                | type • LBRACKET RBRACKET ID_TOK ASSIGN NEW type LBRACKET INT_LIT RBRACKET end_of_line
  135 method: type • ID_TOK $@8 LPAREN formal_arguments RPAREN compound_statement

    LBRACKET  shift, and go to state 54
    ID_TOK    shift, and go to state 55

    id_item  go to state 56
    id_list  go to state 57


State 42

  119 class_body: LBRACE $@6 class_body_declaration • RBRACE

    RBRACE  shift, and go to state 58


State 43

  120 class_body_declaration: fields •
  122                       | fields • class_body_declaration

    error      shift, and go to state 26
    BOOL       shift, and go to state 27
    FINAL      shift, and go to state 28
    FLOAT      shift, and go to state 29
    INT        shift, and go to state 30
    LONG       shift, and go to state 31
    PRIVATE    shift, and go to state 32
    PROTECTED  shift, and go to state 33
    PUBLIC     shift, and go to state 34
    SHORT      shift, and go to state 35
    STATIC     shift, and go to state 36
    STRING     shift, and go to state 37
    VOID       shift, and go to state 38
    CHAR       shift, and go to state 39
    ID_TOK     shift, and go to state 40

    RBRACE  reduce using rule 120 (class_body_declaration)

    type                    go to state 41
    class_body_declaration  go to state 59
    fields                  go to state 43
    class_fields            go to state 44
    instance_fields         go to state 45
    method                  go to state 46
    method_modifier         go to state 47
    object_declaration      go to state 48


State 44

  125 fields: class_fields •

    $default  reduce using rule 125 (fields)


State 45

  126 fields: instance_fields •

    $default  reduce using rule 126 (fields)


State 46

  121 class_body_declaration: method •
  123                       | method • class_body_declaration

    error      shift, and go to state 26
    BOOL       shift, and go to state 27
    FINAL      shift, and go to state 28
    FLOAT      shift, and go to state 29
    INT        shift, and go to state 30
    LONG       shift, and go to state 31
    PRIVATE    shift, and go to state 32
    PROTECTED  shift, and go to state 33
    PUBLIC     shift, and go to state 34
    SHORT      shift, and go to state 35
    STATIC     shift, and go to state 36
    STRING     shift, and go to state 37
    VOID       shift, and go to state 38
    CHAR       shift, and go to state 39
    ID_TOK     shift, and go to state 40

    RBRACE  reduce using rule 121 (class_body_declaration)

    type                    go to state 41
    class_body_declaration  go to state 60
    fields                  go to state 43
    class_fields            go to state 44
    instance_fields         go to state 45
    method                  go to state 46
    method_modifier         go to state 47
    object_declaration      go to state 48


State 47

  133 method: method_modifier • type ID_TOK $@7 LPAREN formal_arguments RPAREN compound_statement

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    type  go to state 61


State 48

  127 fields: object_declaration •

    $default  reduce using rule 127 (fields)


State 49

  124 class_body_declaration: error SEMICOLON •

    $default  reduce using rule 124 (class_body_declaration)


State 50

  130 instance_fields: FINAL type • id_list_const SEMICOLON

    ID_TOK  shift, and go to state 62

    id_list_const  go to state 63


State 51

  128 class_fields: STATIC type • id_list SEMICOLON

    ID_TOK  shift, and go to state 64

    id_item  go to state 56
    id_list  go to state 65


State 52

  161 object_declaration: ID_TOK ID_TOK • $@11 end_of_line
  163                   | ID_TOK ID_TOK • $@12 ASSIGN NEW ID_TOK LPAREN RPAREN end_of_line

    ASSIGN    reduce using rule 162 ($@12)
    $default  reduce using rule 160 ($@11)

    $@11  go to state 66
    $@12  go to state 67


State 53

  137 method: ID_TOK $@9 • LPAREN formal_arguments RPAREN compound_statement

    LPAREN  shift, and go to state 68


State 54

  131 instance_fields: type LBRACKET • RBRACKET ID_TOK ASSIGN NEW type LBRACKET INT_LIT RBRACKET end_of_line

    RBRACKET  shift, and go to state 69


State 55

   91 id_item: ID_TOK •
   93        | ID_TOK • $@2 ASSIGN const_expr
  135 method: type ID_TOK • $@8 LPAREN formal_arguments RPAREN compound_statement

    ASSIGN    reduce using rule 92 ($@2)
    LPAREN    reduce using rule 134 ($@8)
    $default  reduce using rule 91 (id_item)

    $@2  go to state 70
    $@8  go to state 71


State 56

   94 id_list: id_item •
   95        | id_item • COMMA id_list
   96        | id_item • error wrongIDlist

    error  shift, and go to state 72
    COMMA  shift, and go to state 73

    error      [reduce using rule 94 (id_list)]
    SEMICOLON  reduce using rule 94 (id_list)

    shift/reduce conflict on token error:
       94 id_list: id_item •
       96 id_list: id_item • error wrongIDlist
      First example: id_item • error INT_LIT end_of_line
      Shift derivation
        instance_fields
        ↳ 129: id_list                             end_of_line
               ↳ 96: id_item • wrongIDlist
                               ↳ 98: error INT_LIT
      Second example: error INT_LIT wrong_EOF
      Reduce derivation
        instance_fields
        ↳ 129: error INT_LIT end_of_line
                             ↳ 90: wrong_EOF



State 57

  129 instance_fields: type id_list • end_of_line

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 76


State 58

  119 class_body: LBRACE $@6 class_body_declaration RBRACE •

    $default  reduce using rule 119 (class_body)


State 59

  122 class_body_declaration: fields class_body_declaration •

    $default  reduce using rule 122 (class_body_declaration)


State 60

  123 class_body_declaration: method class_body_declaration •

    $default  reduce using rule 123 (class_body_declaration)


State 61

  133 method: method_modifier type • ID_TOK $@7 LPAREN formal_arguments RPAREN compound_statement

    ID_TOK  shift, and go to state 77


State 62

  103 id_list_const: ID_TOK • $@3 ASSIGN const_expr

    $default  reduce using rule 102 ($@3)

    $@3  go to state 78


State 63

  105 id_list_const: id_list_const • COMMA ID_TOK $@4 ASSIGN const_expr
  130 instance_fields: FINAL type id_list_const • SEMICOLON

    COMMA      shift, and go to state 79
    SEMICOLON  shift, and go to state 80


State 64

   91 id_item: ID_TOK •
   93        | ID_TOK • $@2 ASSIGN const_expr

    ASSIGN    reduce using rule 92 ($@2)
    $default  reduce using rule 91 (id_item)

    $@2  go to state 70


State 65

  128 class_fields: STATIC type id_list • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 66

  161 object_declaration: ID_TOK ID_TOK $@11 • end_of_line

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 82


State 67

  163 object_declaration: ID_TOK ID_TOK $@12 • ASSIGN NEW ID_TOK LPAREN RPAREN end_of_line

    ASSIGN  shift, and go to state 83


State 68

  137 method: ID_TOK $@9 LPAREN • formal_arguments RPAREN compound_statement

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    $default  reduce using rule 141 (formal_arguments)

    type              go to state 84
    formal_arguments  go to state 85
    param_list        go to state 86


State 69

  131 instance_fields: type LBRACKET RBRACKET • ID_TOK ASSIGN NEW type LBRACKET INT_LIT RBRACKET end_of_line

    ID_TOK  shift, and go to state 87


State 70

   93 id_item: ID_TOK $@2 • ASSIGN const_expr

    ASSIGN  shift, and go to state 88


State 71

  135 method: type ID_TOK $@8 • LPAREN formal_arguments RPAREN compound_statement

    LPAREN  shift, and go to state 89


State 72

   96 id_list: id_item error • wrongIDlist

    SEMICOLON   shift, and go to state 90
    INT_LIT     shift, and go to state 91
    FLOAT_LIT   shift, and go to state 92
    STRING_LIT  shift, and go to state 93
    ID_TOK      shift, and go to state 94

    wrongIDlist  go to state 95


State 73

   95 id_list: id_item COMMA • id_list

    ID_TOK  shift, and go to state 64

    id_item  go to state 56
    id_list  go to state 96


State 74

   90 end_of_line: error • wrong_EOF

    ADD         shift, and go to state 97
    INC         shift, and go to state 98
    MINUS       shift, and go to state 99
    DEC         shift, and go to state 100
    MUL         shift, and go to state 101
    DIV         shift, and go to state 102
    MOD         shift, and go to state 103
    AND         shift, and go to state 104
    OR          shift, and go to state 105
    NOT         shift, and go to state 106
    EQ          shift, and go to state 107
    NE          shift, and go to state 108
    LT          shift, and go to state 109
    LE          shift, and go to state 110
    GT          shift, and go to state 111
    GE          shift, and go to state 112
    ASSIGN      shift, and go to state 113
    BOOL        shift, and go to state 114
    BREAK       shift, and go to state 115
    BUTE        shift, and go to state 116
    CASE        shift, and go to state 117
    CATCH       shift, and go to state 118
    CLASS       shift, and go to state 119
    CONST       shift, and go to state 120
    CONTINUE    shift, and go to state 121
    DEFAULT     shift, and go to state 122
    DO          shift, and go to state 123
    DOUBLE      shift, and go to state 124
    ELSE        shift, and go to state 125
    EXTENDS     shift, and go to state 126
    FALSE       shift, and go to state 127
    FINAL       shift, and go to state 128
    FINALLY     shift, and go to state 129
    FLOAT       shift, and go to state 130
    FOR         shift, and go to state 131
    IF          shift, and go to state 132
    IMPLEMENTS  shift, and go to state 133
    INT         shift, and go to state 134
    LONG        shift, and go to state 135
    MAIN        shift, and go to state 136
    NEW         shift, and go to state 137
    PRINT       shift, and go to state 138
    PRIVATE     shift, and go to state 139
    PROTECTED   shift, and go to state 140
    PUBLIC      shift, and go to state 141
    RETURN      shift, and go to state 142
    SHORT       shift, and go to state 143
    STATIC      shift, and go to state 144
    STRING      shift, and go to state 145
    SWITCH      shift, and go to state 146
    THIS        shift, and go to state 147
    TRUE        shift, and go to state 148
    TRY         shift, and go to state 149
    VOID        shift, and go to state 150
    WHILE       shift, and go to state 151
    COMMA       shift, and go to state 152
    COLON       shift, and go to state 153
    LPAREN      shift, and go to state 154
    RPAREN      shift, and go to state 155
    LBRACKET    shift, and go to state 156
    RBRACKET    shift, and go to state 157
    LBRACE      shift, and go to state 158
    RBRACE      shift, and go to state 159
    INT_LIT     shift, and go to state 160
    FLOAT_LIT   shift, and go to state 161
    STRING_LIT  shift, and go to state 162
    ABSTRACT    shift, and go to state 163
    DOT         shift, and go to state 164
    READ        shift, and go to state 165
    CHAR        shift, and go to state 166
    ID_TOK      shift, and go to state 167

    wrong_EOF  go to state 168


State 75

   89 end_of_line: SEMICOLON •

    $default  reduce using rule 89 (end_of_line)


State 76

  129 instance_fields: type id_list end_of_line •

    $default  reduce using rule 129 (instance_fields)


State 77

  133 method: method_modifier type ID_TOK • $@7 LPAREN formal_arguments RPAREN compound_statement

    $default  reduce using rule 132 ($@7)

    $@7  go to state 169


State 78

  103 id_list_const: ID_TOK $@3 • ASSIGN const_expr

    ASSIGN  shift, and go to state 170


State 79

  105 id_list_const: id_list_const COMMA • ID_TOK $@4 ASSIGN const_expr

    ID_TOK  shift, and go to state 171


State 80

  130 instance_fields: FINAL type id_list_const SEMICOLON •

    $default  reduce using rule 130 (instance_fields)


State 81

  128 class_fields: STATIC type id_list SEMICOLON •

    $default  reduce using rule 128 (class_fields)


State 82

  161 object_declaration: ID_TOK ID_TOK $@11 end_of_line •

    $default  reduce using rule 161 (object_declaration)


State 83

  163 object_declaration: ID_TOK ID_TOK $@12 ASSIGN • NEW ID_TOK LPAREN RPAREN end_of_line

    NEW  shift, and go to state 172


State 84

  143 param_list: type • ID_TOK

    ID_TOK  shift, and go to state 173


State 85

  137 method: ID_TOK $@9 LPAREN formal_arguments • RPAREN compound_statement

    RPAREN  shift, and go to state 174


State 86

  142 formal_arguments: param_list •
  144 param_list: param_list • COMMA type ID_TOK

    COMMA  shift, and go to state 175

    $default  reduce using rule 142 (formal_arguments)


State 87

  131 instance_fields: type LBRACKET RBRACKET ID_TOK • ASSIGN NEW type LBRACKET INT_LIT RBRACKET end_of_line

    ASSIGN  shift, and go to state 176


State 88

   93 id_item: ID_TOK $@2 ASSIGN • const_expr

    FALSE       shift, and go to state 177
    TRUE        shift, and go to state 178
    INT_LIT     shift, and go to state 179
    FLOAT_LIT   shift, and go to state 180
    STRING_LIT  shift, and go to state 181
    ID_TOK      shift, and go to state 182

    name                 go to state 183
    field_or_array_item  go to state 184
    array_item           go to state 185
    const_expr           go to state 186
    const_term           go to state 187
    const_factor         go to state 188
    method_invocation    go to state 189


State 89

  135 method: type ID_TOK $@8 LPAREN • formal_arguments RPAREN compound_statement

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    $default  reduce using rule 141 (formal_arguments)

    type              go to state 84
    formal_arguments  go to state 190
    param_list        go to state 86


State 90

  101 wrongIDlist: SEMICOLON •

    $default  reduce using rule 101 (wrongIDlist)


State 91

   98 wrongIDlist: INT_LIT •

    $default  reduce using rule 98 (wrongIDlist)


State 92

  100 wrongIDlist: FLOAT_LIT •

    $default  reduce using rule 100 (wrongIDlist)


State 93

   99 wrongIDlist: STRING_LIT •

    $default  reduce using rule 99 (wrongIDlist)


State 94

   97 wrongIDlist: ID_TOK •

    $default  reduce using rule 97 (wrongIDlist)


State 95

   96 id_list: id_item error wrongIDlist •

    $default  reduce using rule 96 (id_list)


State 96

   95 id_list: id_item COMMA id_list •

    $default  reduce using rule 95 (id_list)


State 97

   18 wrong_EOF: ADD •

    $default  reduce using rule 18 (wrong_EOF)


State 98

   19 wrong_EOF: INC •

    $default  reduce using rule 19 (wrong_EOF)


State 99

   20 wrong_EOF: MINUS •

    $default  reduce using rule 20 (wrong_EOF)


State 100

   21 wrong_EOF: DEC •

    $default  reduce using rule 21 (wrong_EOF)


State 101

   22 wrong_EOF: MUL •

    $default  reduce using rule 22 (wrong_EOF)


State 102

   23 wrong_EOF: DIV •

    $default  reduce using rule 23 (wrong_EOF)


State 103

   24 wrong_EOF: MOD •

    $default  reduce using rule 24 (wrong_EOF)


State 104

   25 wrong_EOF: AND •

    $default  reduce using rule 25 (wrong_EOF)


State 105

   26 wrong_EOF: OR •

    $default  reduce using rule 26 (wrong_EOF)


State 106

   27 wrong_EOF: NOT •

    $default  reduce using rule 27 (wrong_EOF)


State 107

   28 wrong_EOF: EQ •

    $default  reduce using rule 28 (wrong_EOF)


State 108

   29 wrong_EOF: NE •

    $default  reduce using rule 29 (wrong_EOF)


State 109

   30 wrong_EOF: LT •

    $default  reduce using rule 30 (wrong_EOF)


State 110

   31 wrong_EOF: LE •

    $default  reduce using rule 31 (wrong_EOF)


State 111

   32 wrong_EOF: GT •

    $default  reduce using rule 32 (wrong_EOF)


State 112

   33 wrong_EOF: GE •

    $default  reduce using rule 33 (wrong_EOF)


State 113

   34 wrong_EOF: ASSIGN •

    $default  reduce using rule 34 (wrong_EOF)


State 114

   35 wrong_EOF: BOOL •

    $default  reduce using rule 35 (wrong_EOF)


State 115

   36 wrong_EOF: BREAK •

    $default  reduce using rule 36 (wrong_EOF)


State 116

   37 wrong_EOF: BUTE •

    $default  reduce using rule 37 (wrong_EOF)


State 117

   38 wrong_EOF: CASE •

    $default  reduce using rule 38 (wrong_EOF)


State 118

   39 wrong_EOF: CATCH •

    $default  reduce using rule 39 (wrong_EOF)


State 119

   40 wrong_EOF: CLASS •

    $default  reduce using rule 40 (wrong_EOF)


State 120

   41 wrong_EOF: CONST •

    $default  reduce using rule 41 (wrong_EOF)


State 121

   42 wrong_EOF: CONTINUE •

    $default  reduce using rule 42 (wrong_EOF)


State 122

   43 wrong_EOF: DEFAULT •

    $default  reduce using rule 43 (wrong_EOF)


State 123

   44 wrong_EOF: DO •

    $default  reduce using rule 44 (wrong_EOF)


State 124

   45 wrong_EOF: DOUBLE •

    $default  reduce using rule 45 (wrong_EOF)


State 125

   46 wrong_EOF: ELSE •

    $default  reduce using rule 46 (wrong_EOF)


State 126

   47 wrong_EOF: EXTENDS •

    $default  reduce using rule 47 (wrong_EOF)


State 127

   48 wrong_EOF: FALSE •

    $default  reduce using rule 48 (wrong_EOF)


State 128

   49 wrong_EOF: FINAL •

    $default  reduce using rule 49 (wrong_EOF)


State 129

   50 wrong_EOF: FINALLY •

    $default  reduce using rule 50 (wrong_EOF)


State 130

   51 wrong_EOF: FLOAT •

    $default  reduce using rule 51 (wrong_EOF)


State 131

   52 wrong_EOF: FOR •

    $default  reduce using rule 52 (wrong_EOF)


State 132

   53 wrong_EOF: IF •

    $default  reduce using rule 53 (wrong_EOF)


State 133

   54 wrong_EOF: IMPLEMENTS •

    $default  reduce using rule 54 (wrong_EOF)


State 134

   55 wrong_EOF: INT •

    $default  reduce using rule 55 (wrong_EOF)


State 135

   56 wrong_EOF: LONG •

    $default  reduce using rule 56 (wrong_EOF)


State 136

   57 wrong_EOF: MAIN •

    $default  reduce using rule 57 (wrong_EOF)


State 137

   58 wrong_EOF: NEW •

    $default  reduce using rule 58 (wrong_EOF)


State 138

   59 wrong_EOF: PRINT •

    $default  reduce using rule 59 (wrong_EOF)


State 139

   60 wrong_EOF: PRIVATE •

    $default  reduce using rule 60 (wrong_EOF)


State 140

   61 wrong_EOF: PROTECTED •

    $default  reduce using rule 61 (wrong_EOF)


State 141

   62 wrong_EOF: PUBLIC •

    $default  reduce using rule 62 (wrong_EOF)


State 142

   63 wrong_EOF: RETURN •

    $default  reduce using rule 63 (wrong_EOF)


State 143

   64 wrong_EOF: SHORT •

    $default  reduce using rule 64 (wrong_EOF)


State 144

   65 wrong_EOF: STATIC •

    $default  reduce using rule 65 (wrong_EOF)


State 145

   66 wrong_EOF: STRING •

    $default  reduce using rule 66 (wrong_EOF)


State 146

   67 wrong_EOF: SWITCH •

    $default  reduce using rule 67 (wrong_EOF)


State 147

   68 wrong_EOF: THIS •

    $default  reduce using rule 68 (wrong_EOF)


State 148

   69 wrong_EOF: TRUE •

    $default  reduce using rule 69 (wrong_EOF)


State 149

   70 wrong_EOF: TRY •

    $default  reduce using rule 70 (wrong_EOF)


State 150

   71 wrong_EOF: VOID •

    $default  reduce using rule 71 (wrong_EOF)


State 151

   72 wrong_EOF: WHILE •

    $default  reduce using rule 72 (wrong_EOF)


State 152

   73 wrong_EOF: COMMA •

    $default  reduce using rule 73 (wrong_EOF)


State 153

   74 wrong_EOF: COLON •

    $default  reduce using rule 74 (wrong_EOF)


State 154

   75 wrong_EOF: LPAREN •

    $default  reduce using rule 75 (wrong_EOF)


State 155

   76 wrong_EOF: RPAREN •

    $default  reduce using rule 76 (wrong_EOF)


State 156

   77 wrong_EOF: LBRACKET •

    $default  reduce using rule 77 (wrong_EOF)


State 157

   78 wrong_EOF: RBRACKET •

    $default  reduce using rule 78 (wrong_EOF)


State 158

   79 wrong_EOF: LBRACE •

    $default  reduce using rule 79 (wrong_EOF)


State 159

   80 wrong_EOF: RBRACE •

    $default  reduce using rule 80 (wrong_EOF)


State 160

   81 wrong_EOF: INT_LIT •

    $default  reduce using rule 81 (wrong_EOF)


State 161

   82 wrong_EOF: FLOAT_LIT •

    $default  reduce using rule 82 (wrong_EOF)


State 162

   83 wrong_EOF: STRING_LIT •

    $default  reduce using rule 83 (wrong_EOF)


State 163

   84 wrong_EOF: ABSTRACT •

    $default  reduce using rule 84 (wrong_EOF)


State 164

   85 wrong_EOF: DOT •

    $default  reduce using rule 85 (wrong_EOF)


State 165

   86 wrong_EOF: READ •

    $default  reduce using rule 86 (wrong_EOF)


State 166

   87 wrong_EOF: CHAR •

    $default  reduce using rule 87 (wrong_EOF)


State 167

   88 wrong_EOF: ID_TOK •

    $default  reduce using rule 88 (wrong_EOF)


State 168

   90 end_of_line: error wrong_EOF •

    $default  reduce using rule 90 (end_of_line)


State 169

  133 method: method_modifier type ID_TOK $@7 • LPAREN formal_arguments RPAREN compound_statement

    LPAREN  shift, and go to state 191


State 170

  103 id_list_const: ID_TOK $@3 ASSIGN • const_expr

    FALSE       shift, and go to state 177
    TRUE        shift, and go to state 178
    INT_LIT     shift, and go to state 179
    FLOAT_LIT   shift, and go to state 180
    STRING_LIT  shift, and go to state 181
    ID_TOK      shift, and go to state 182

    name                 go to state 183
    field_or_array_item  go to state 184
    array_item           go to state 185
    const_expr           go to state 192
    const_term           go to state 187
    const_factor         go to state 188
    method_invocation    go to state 189


State 171

  105 id_list_const: id_list_const COMMA ID_TOK • $@4 ASSIGN const_expr

    $default  reduce using rule 104 ($@4)

    $@4  go to state 193


State 172

  163 object_declaration: ID_TOK ID_TOK $@12 ASSIGN NEW • ID_TOK LPAREN RPAREN end_of_line

    ID_TOK  shift, and go to state 194


State 173

  143 param_list: type ID_TOK •

    $default  reduce using rule 143 (param_list)


State 174

  137 method: ID_TOK $@9 LPAREN formal_arguments RPAREN • compound_statement

    LBRACE  shift, and go to state 195

    compound_statement  go to state 196


State 175

  144 param_list: param_list COMMA • type ID_TOK

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    type  go to state 197


State 176

  131 instance_fields: type LBRACKET RBRACKET ID_TOK ASSIGN • NEW type LBRACKET INT_LIT RBRACKET end_of_line

    NEW  shift, and go to state 198


State 177

  185 const_factor: FALSE •

    $default  reduce using rule 185 (const_factor)


State 178

  184 const_factor: TRUE •

    $default  reduce using rule 184 (const_factor)


State 179

  181 const_factor: INT_LIT •

    $default  reduce using rule 181 (const_factor)


State 180

  182 const_factor: FLOAT_LIT •

    $default  reduce using rule 182 (const_factor)


State 181

  183 const_factor: STRING_LIT •

    $default  reduce using rule 183 (const_factor)


State 182

  169 name: ID_TOK •
  171 field_or_array_item: ID_TOK • DOT ID_TOK
  173 array_item: ID_TOK • LBRACKET INT_LIT RBRACKET
  174           | ID_TOK • LBRACKET ID_TOK RBRACKET
  186 const_factor: ID_TOK •

    LBRACKET  shift, and go to state 199
    DOT       shift, and go to state 200

    LPAREN    reduce using rule 169 (name)
    $default  reduce using rule 186 (const_factor)


State 183

  213 method_invocation: name • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 201


State 184

  170 name: field_or_array_item •

    $default  reduce using rule 170 (name)


State 185

  172 field_or_array_item: array_item •

    $default  reduce using rule 172 (field_or_array_item)


State 186

   93 id_item: ID_TOK $@2 ASSIGN const_expr •
  176 const_expr: const_expr • ADD const_term
  177           | const_expr • MINUS const_term

    ADD    shift, and go to state 202
    MINUS  shift, and go to state 203

    $default  reduce using rule 93 (id_item)


State 187

  175 const_expr: const_term •
  179 const_term: const_term • MUL const_factor
  180           | const_term • DIV const_factor

    MUL  shift, and go to state 204
    DIV  shift, and go to state 205

    $default  reduce using rule 175 (const_expr)


State 188

  178 const_term: const_factor •

    $default  reduce using rule 178 (const_term)


State 189

  187 const_factor: method_invocation •

    $default  reduce using rule 187 (const_factor)


State 190

  135 method: type ID_TOK $@8 LPAREN formal_arguments • RPAREN compound_statement

    RPAREN  shift, and go to state 206


State 191

  133 method: method_modifier type ID_TOK $@7 LPAREN • formal_arguments RPAREN compound_statement

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    $default  reduce using rule 141 (formal_arguments)

    type              go to state 84
    formal_arguments  go to state 207
    param_list        go to state 86


State 192

  103 id_list_const: ID_TOK $@3 ASSIGN const_expr •
  176 const_expr: const_expr • ADD const_term
  177           | const_expr • MINUS const_term

    ADD    shift, and go to state 202
    MINUS  shift, and go to state 203

    $default  reduce using rule 103 (id_list_const)


State 193

  105 id_list_const: id_list_const COMMA ID_TOK $@4 • ASSIGN const_expr

    ASSIGN  shift, and go to state 208


State 194

  163 object_declaration: ID_TOK ID_TOK $@12 ASSIGN NEW ID_TOK • LPAREN RPAREN end_of_line

    LPAREN  shift, and go to state 209


State 195

  151 compound_statement: LBRACE • $@10 compound_statement_body RBRACE

    $default  reduce using rule 150 ($@10)

    $@10  go to state 210


State 196

  137 method: ID_TOK $@9 LPAREN formal_arguments RPAREN compound_statement •

    $default  reduce using rule 137 (method)


State 197

  144 param_list: param_list COMMA type • ID_TOK

    ID_TOK  shift, and go to state 211


State 198

  131 instance_fields: type LBRACKET RBRACKET ID_TOK ASSIGN NEW • type LBRACKET INT_LIT RBRACKET end_of_line

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    type  go to state 212


State 199

  173 array_item: ID_TOK LBRACKET • INT_LIT RBRACKET
  174           | ID_TOK LBRACKET • ID_TOK RBRACKET

    INT_LIT  shift, and go to state 213
    ID_TOK   shift, and go to state 214


State 200

  171 field_or_array_item: ID_TOK DOT • ID_TOK

    ID_TOK  shift, and go to state 215


State 201

  213 method_invocation: name LPAREN • arguments RPAREN

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    $default  reduce using rule 214 (arguments)

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 229
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233
    arguments            go to state 234
    arg_list             go to state 235


State 202

  176 const_expr: const_expr ADD • const_term

    FALSE       shift, and go to state 177
    TRUE        shift, and go to state 178
    INT_LIT     shift, and go to state 179
    FLOAT_LIT   shift, and go to state 180
    STRING_LIT  shift, and go to state 181
    ID_TOK      shift, and go to state 182

    name                 go to state 183
    field_or_array_item  go to state 184
    array_item           go to state 185
    const_term           go to state 236
    const_factor         go to state 188
    method_invocation    go to state 189


State 203

  177 const_expr: const_expr MINUS • const_term

    FALSE       shift, and go to state 177
    TRUE        shift, and go to state 178
    INT_LIT     shift, and go to state 179
    FLOAT_LIT   shift, and go to state 180
    STRING_LIT  shift, and go to state 181
    ID_TOK      shift, and go to state 182

    name                 go to state 183
    field_or_array_item  go to state 184
    array_item           go to state 185
    const_term           go to state 237
    const_factor         go to state 188
    method_invocation    go to state 189


State 204

  179 const_term: const_term MUL • const_factor

    FALSE       shift, and go to state 177
    TRUE        shift, and go to state 178
    INT_LIT     shift, and go to state 179
    FLOAT_LIT   shift, and go to state 180
    STRING_LIT  shift, and go to state 181
    ID_TOK      shift, and go to state 182

    name                 go to state 183
    field_or_array_item  go to state 184
    array_item           go to state 185
    const_factor         go to state 238
    method_invocation    go to state 189


State 205

  180 const_term: const_term DIV • const_factor

    FALSE       shift, and go to state 177
    TRUE        shift, and go to state 178
    INT_LIT     shift, and go to state 179
    FLOAT_LIT   shift, and go to state 180
    STRING_LIT  shift, and go to state 181
    ID_TOK      shift, and go to state 182

    name                 go to state 183
    field_or_array_item  go to state 184
    array_item           go to state 185
    const_factor         go to state 239
    method_invocation    go to state 189


State 206

  135 method: type ID_TOK $@8 LPAREN formal_arguments RPAREN • compound_statement

    LBRACE  shift, and go to state 195

    compound_statement  go to state 240


State 207

  133 method: method_modifier type ID_TOK $@7 LPAREN formal_arguments • RPAREN compound_statement

    RPAREN  shift, and go to state 241


State 208

  105 id_list_const: id_list_const COMMA ID_TOK $@4 ASSIGN • const_expr

    FALSE       shift, and go to state 177
    TRUE        shift, and go to state 178
    INT_LIT     shift, and go to state 179
    FLOAT_LIT   shift, and go to state 180
    STRING_LIT  shift, and go to state 181
    ID_TOK      shift, and go to state 182

    name                 go to state 183
    field_or_array_item  go to state 184
    array_item           go to state 185
    const_expr           go to state 242
    const_term           go to state 187
    const_factor         go to state 188
    method_invocation    go to state 189


State 209

  163 object_declaration: ID_TOK ID_TOK $@12 ASSIGN NEW ID_TOK LPAREN • RPAREN end_of_line

    RPAREN  shift, and go to state 243


State 210

  151 compound_statement: LBRACE $@10 • compound_statement_body RBRACE

    error       shift, and go to state 244
    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    BOOL        shift, and go to state 27
    ELSE        shift, and go to state 245
    FALSE       shift, and go to state 220
    FINAL       shift, and go to state 246
    FLOAT       shift, and go to state 29
    FOR         shift, and go to state 247
    IF          shift, and go to state 248
    INT         shift, and go to state 30
    LONG        shift, and go to state 31
    PRINT       shift, and go to state 249
    PUBLIC      shift, and go to state 2
    RETURN      shift, and go to state 250
    SHORT       shift, and go to state 35
    STATIC      shift, and go to state 251
    STRING      shift, and go to state 37
    TRUE        shift, and go to state 221
    VOID        shift, and go to state 38
    WHILE       shift, and go to state 252
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ABSTRACT    shift, and go to state 3
    READ        shift, and go to state 254
    CHAR        shift, and go to state 39
    ID_TOK      shift, and go to state 255

    CLASS   reduce using rule 108 (class_modifier)
    RBRACE  reduce using rule 152 (compound_statement_body)

    variable_declaration     go to state 256
    type                     go to state 257
    class_declaration        go to state 258
    class_modifier           go to state 8
    statement                go to state 259
    compound_statement       go to state 260
    compound_statement_body  go to state 261
    object_declaration       go to state 262
    simple_statement         go to state 263
    name                     go to state 264
    field_or_array_item      go to state 184
    array_item               go to state 228
    expression               go to state 265
    term                     go to state 230
    factor                   go to state 231
    prefixOP                 go to state 232
    method_invocation        go to state 233
    conditional_statement    go to state 266
    loop_statement           go to state 267
    while                    go to state 268
    for                      go to state 269
    return_statement         go to state 270


State 211

  144 param_list: param_list COMMA type ID_TOK •

    $default  reduce using rule 144 (param_list)


State 212

  131 instance_fields: type LBRACKET RBRACKET ID_TOK ASSIGN NEW type • LBRACKET INT_LIT RBRACKET end_of_line

    LBRACKET  shift, and go to state 271


State 213

  173 array_item: ID_TOK LBRACKET INT_LIT • RBRACKET

    RBRACKET  shift, and go to state 272


State 214

  174 array_item: ID_TOK LBRACKET ID_TOK • RBRACKET

    RBRACKET  shift, and go to state 273


State 215

  171 field_or_array_item: ID_TOK DOT ID_TOK •

    $default  reduce using rule 171 (field_or_array_item)


State 216

  209 prefixOP: ADD •

    $default  reduce using rule 209 (prefixOP)


State 217

  207 prefixOP: INC •

    $default  reduce using rule 207 (prefixOP)


State 218

  210 prefixOP: MINUS •

    $default  reduce using rule 210 (prefixOP)


State 219

  208 prefixOP: DEC •

    $default  reduce using rule 208 (prefixOP)


State 220

  199 factor: FALSE •

    $default  reduce using rule 199 (factor)


State 221

  198 factor: TRUE •

    $default  reduce using rule 198 (factor)


State 222

  200 factor: LPAREN • expression RPAREN

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 274
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 223

  195 factor: INT_LIT •
  203       | INT_LIT • postfixOP

    INC  shift, and go to state 275
    DEC  shift, and go to state 276

    $default  reduce using rule 195 (factor)

    postfixOP  go to state 277


State 224

  196 factor: FLOAT_LIT •

    $default  reduce using rule 196 (factor)


State 225

  197 factor: STRING_LIT •

    $default  reduce using rule 197 (factor)


State 226

  169 name: ID_TOK •
  171 field_or_array_item: ID_TOK • DOT ID_TOK
  173 array_item: ID_TOK • LBRACKET INT_LIT RBRACKET
  174           | ID_TOK • LBRACKET ID_TOK RBRACKET
  194 factor: ID_TOK •
  205       | ID_TOK • DOT ID_TOK

    LBRACKET  shift, and go to state 199
    DOT       shift, and go to state 278

    INC       reduce using rule 169 (name)
    DEC       reduce using rule 169 (name)
    ASSIGN    reduce using rule 169 (name)
    LPAREN    reduce using rule 169 (name)
    $default  reduce using rule 194 (factor)


State 227

  202 factor: name • postfixOP
  213 method_invocation: name • LPAREN arguments RPAREN

    INC     shift, and go to state 275
    DEC     shift, and go to state 276
    LPAREN  shift, and go to state 201

    postfixOP  go to state 279


State 228

  172 field_or_array_item: array_item •
  206 factor: array_item •

    INC       reduce using rule 172 (field_or_array_item)
    DEC       reduce using rule 172 (field_or_array_item)
    ASSIGN    reduce using rule 172 (field_or_array_item)
    LPAREN    reduce using rule 172 (field_or_array_item)
    $default  reduce using rule 206 (factor)


State 229

  189 expression: expression • ADD term
  190           | expression • MINUS term
  216 arg_list: expression •

    ADD    shift, and go to state 280
    MINUS  shift, and go to state 281

    $default  reduce using rule 216 (arg_list)


State 230

  188 expression: term •
  192 term: term • MUL factor
  193     | term • DIV factor

    MUL  shift, and go to state 282
    DIV  shift, and go to state 283

    $default  reduce using rule 188 (expression)


State 231

  191 term: factor •

    $default  reduce using rule 191 (term)


State 232

  201 factor: prefixOP • name

    ID_TOK  shift, and go to state 284

    name                 go to state 285
    field_or_array_item  go to state 184
    array_item           go to state 185


State 233

  204 factor: method_invocation •

    $default  reduce using rule 204 (factor)


State 234

  213 method_invocation: name LPAREN arguments • RPAREN

    RPAREN  shift, and go to state 286


State 235

  215 arguments: arg_list •
  217 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 287

    $default  reduce using rule 215 (arguments)


State 236

  176 const_expr: const_expr ADD const_term •
  179 const_term: const_term • MUL const_factor
  180           | const_term • DIV const_factor

    MUL  shift, and go to state 204
    DIV  shift, and go to state 205

    $default  reduce using rule 176 (const_expr)


State 237

  177 const_expr: const_expr MINUS const_term •
  179 const_term: const_term • MUL const_factor
  180           | const_term • DIV const_factor

    MUL  shift, and go to state 204
    DIV  shift, and go to state 205

    $default  reduce using rule 177 (const_expr)


State 238

  179 const_term: const_term MUL const_factor •

    $default  reduce using rule 179 (const_term)


State 239

  180 const_term: const_term DIV const_factor •

    $default  reduce using rule 180 (const_term)


State 240

  135 method: type ID_TOK $@8 LPAREN formal_arguments RPAREN compound_statement •

    $default  reduce using rule 135 (method)


State 241

  133 method: method_modifier type ID_TOK $@7 LPAREN formal_arguments RPAREN • compound_statement

    LBRACE  shift, and go to state 195

    compound_statement  go to state 288


State 242

  105 id_list_const: id_list_const COMMA ID_TOK $@4 ASSIGN const_expr •
  176 const_expr: const_expr • ADD const_term
  177           | const_expr • MINUS const_term

    ADD    shift, and go to state 202
    MINUS  shift, and go to state 203

    $default  reduce using rule 105 (id_list_const)


State 243

  163 object_declaration: ID_TOK ID_TOK $@12 ASSIGN NEW ID_TOK LPAREN RPAREN • end_of_line

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 289


State 244

  159 compound_statement_body: error • SEMICOLON
  234 while: error • RPAREN

    SEMICOLON  shift, and go to state 290
    RPAREN     shift, and go to state 291


State 245

  149 statement: ELSE • statement

    error       shift, and go to state 292
    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    ELSE        shift, and go to state 245
    FALSE       shift, and go to state 220
    FOR         shift, and go to state 247
    IF          shift, and go to state 248
    PRINT       shift, and go to state 249
    TRUE        shift, and go to state 221
    WHILE       shift, and go to state 252
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    READ        shift, and go to state 254
    ID_TOK      shift, and go to state 226

    statement              go to state 293
    compound_statement     go to state 260
    simple_statement       go to state 263
    name                   go to state 264
    field_or_array_item    go to state 184
    array_item             go to state 228
    expression             go to state 265
    term                   go to state 230
    factor                 go to state 231
    prefixOP               go to state 232
    method_invocation      go to state 233
    conditional_statement  go to state 266
    loop_statement         go to state 267
    while                  go to state 268
    for                    go to state 269


State 246

    9 variable_declaration: FINAL • type id_list_const SEMICOLON
  111 class_modifier: FINAL •

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    $default  reduce using rule 111 (class_modifier)

    type  go to state 294


State 247

  235 for: FOR • LPAREN forInitOpt SEMICOLON boolean_expr SEMICOLON forUpdateOpt RPAREN if_else_loop_statement

    LPAREN  shift, and go to state 295


State 248

  218 conditional_statement: IF • LPAREN boolean_expr RPAREN if_else_loop_statement
  219                      | IF • LPAREN boolean_expr RPAREN if_else_loop_statement else
  220                      | IF • LPAREN error RPAREN

    LPAREN  shift, and go to state 296


State 249

  165 simple_statement: PRINT • LPAREN expression RPAREN end_of_line

    LPAREN  shift, and go to state 297


State 250

  244 return_statement: RETURN • expression SEMICOLON

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 298
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 251

    5 variable_declaration: STATIC • type id_list SEMICOLON

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    type  go to state 299


State 252

  233 while: WHILE • LPAREN boolean_expr RPAREN if_else_loop_statement

    LPAREN  shift, and go to state 300


State 253

  168 simple_statement: SEMICOLON •

    $default  reduce using rule 168 (simple_statement)


State 254

  166 simple_statement: READ • LPAREN name RPAREN end_of_line

    LPAREN  shift, and go to state 301


State 255

  158 compound_statement_body: ID_TOK •
  161 object_declaration: ID_TOK • ID_TOK $@11 end_of_line
  163                   | ID_TOK • ID_TOK $@12 ASSIGN NEW ID_TOK LPAREN RPAREN end_of_line
  169 name: ID_TOK •
  171 field_or_array_item: ID_TOK • DOT ID_TOK
  173 array_item: ID_TOK • LBRACKET INT_LIT RBRACKET
  174           | ID_TOK • LBRACKET ID_TOK RBRACKET
  194 factor: ID_TOK •
  205       | ID_TOK • DOT ID_TOK

    LBRACKET  shift, and go to state 199
    DOT       shift, and go to state 278
    ID_TOK    shift, and go to state 52

    INC       reduce using rule 169 (name)
    DEC       reduce using rule 169 (name)
    ASSIGN    reduce using rule 169 (name)
    LPAREN    reduce using rule 169 (name)
    RBRACE    reduce using rule 158 (compound_statement_body)
    $default  reduce using rule 194 (factor)


State 256

  153 compound_statement_body: variable_declaration • compound_statement_body

    error       shift, and go to state 244
    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    BOOL        shift, and go to state 27
    ELSE        shift, and go to state 245
    FALSE       shift, and go to state 220
    FINAL       shift, and go to state 246
    FLOAT       shift, and go to state 29
    FOR         shift, and go to state 247
    IF          shift, and go to state 248
    INT         shift, and go to state 30
    LONG        shift, and go to state 31
    PRINT       shift, and go to state 249
    PUBLIC      shift, and go to state 2
    RETURN      shift, and go to state 250
    SHORT       shift, and go to state 35
    STATIC      shift, and go to state 251
    STRING      shift, and go to state 37
    TRUE        shift, and go to state 221
    VOID        shift, and go to state 38
    WHILE       shift, and go to state 252
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ABSTRACT    shift, and go to state 3
    READ        shift, and go to state 254
    CHAR        shift, and go to state 39
    ID_TOK      shift, and go to state 255

    CLASS   reduce using rule 108 (class_modifier)
    RBRACE  reduce using rule 152 (compound_statement_body)

    variable_declaration     go to state 256
    type                     go to state 257
    class_declaration        go to state 258
    class_modifier           go to state 8
    statement                go to state 259
    compound_statement       go to state 260
    compound_statement_body  go to state 302
    object_declaration       go to state 262
    simple_statement         go to state 263
    name                     go to state 264
    field_or_array_item      go to state 184
    array_item               go to state 228
    expression               go to state 265
    term                     go to state 230
    factor                   go to state 231
    prefixOP                 go to state 232
    method_invocation        go to state 233
    conditional_statement    go to state 266
    loop_statement           go to state 267
    while                    go to state 268
    for                      go to state 269
    return_statement         go to state 270


State 257

    6 variable_declaration: type • id_list end_of_line
    8                     | type • LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW type LBRACKET INT_LIT RBRACKET SEMICOLON

    LBRACKET  shift, and go to state 303
    ID_TOK    shift, and go to state 64

    id_item  go to state 56
    id_list  go to state 304


State 258

  157 compound_statement_body: class_declaration •

    $default  reduce using rule 157 (compound_statement_body)


State 259

  154 compound_statement_body: statement • compound_statement_body

    error       shift, and go to state 244
    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    BOOL        shift, and go to state 27
    ELSE        shift, and go to state 245
    FALSE       shift, and go to state 220
    FINAL       shift, and go to state 246
    FLOAT       shift, and go to state 29
    FOR         shift, and go to state 247
    IF          shift, and go to state 248
    INT         shift, and go to state 30
    LONG        shift, and go to state 31
    PRINT       shift, and go to state 249
    PUBLIC      shift, and go to state 2
    RETURN      shift, and go to state 250
    SHORT       shift, and go to state 35
    STATIC      shift, and go to state 251
    STRING      shift, and go to state 37
    TRUE        shift, and go to state 221
    VOID        shift, and go to state 38
    WHILE       shift, and go to state 252
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ABSTRACT    shift, and go to state 3
    READ        shift, and go to state 254
    CHAR        shift, and go to state 39
    ID_TOK      shift, and go to state 255

    CLASS   reduce using rule 108 (class_modifier)
    RBRACE  reduce using rule 152 (compound_statement_body)

    variable_declaration     go to state 256
    type                     go to state 257
    class_declaration        go to state 258
    class_modifier           go to state 8
    statement                go to state 259
    compound_statement       go to state 260
    compound_statement_body  go to state 305
    object_declaration       go to state 262
    simple_statement         go to state 263
    name                     go to state 264
    field_or_array_item      go to state 184
    array_item               go to state 228
    expression               go to state 265
    term                     go to state 230
    factor                   go to state 231
    prefixOP                 go to state 232
    method_invocation        go to state 233
    conditional_statement    go to state 266
    loop_statement           go to state 267
    while                    go to state 268
    for                      go to state 269
    return_statement         go to state 270


State 260

  145 statement: compound_statement •

    $default  reduce using rule 145 (statement)


State 261

  151 compound_statement: LBRACE $@10 compound_statement_body • RBRACE

    RBRACE  shift, and go to state 306


State 262

  155 compound_statement_body: object_declaration • compound_statement_body

    error       shift, and go to state 244
    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    BOOL        shift, and go to state 27
    ELSE        shift, and go to state 245
    FALSE       shift, and go to state 220
    FINAL       shift, and go to state 246
    FLOAT       shift, and go to state 29
    FOR         shift, and go to state 247
    IF          shift, and go to state 248
    INT         shift, and go to state 30
    LONG        shift, and go to state 31
    PRINT       shift, and go to state 249
    PUBLIC      shift, and go to state 2
    RETURN      shift, and go to state 250
    SHORT       shift, and go to state 35
    STATIC      shift, and go to state 251
    STRING      shift, and go to state 37
    TRUE        shift, and go to state 221
    VOID        shift, and go to state 38
    WHILE       shift, and go to state 252
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ABSTRACT    shift, and go to state 3
    READ        shift, and go to state 254
    CHAR        shift, and go to state 39
    ID_TOK      shift, and go to state 255

    CLASS   reduce using rule 108 (class_modifier)
    RBRACE  reduce using rule 152 (compound_statement_body)

    variable_declaration     go to state 256
    type                     go to state 257
    class_declaration        go to state 258
    class_modifier           go to state 8
    statement                go to state 259
    compound_statement       go to state 260
    compound_statement_body  go to state 307
    object_declaration       go to state 262
    simple_statement         go to state 263
    name                     go to state 264
    field_or_array_item      go to state 184
    array_item               go to state 228
    expression               go to state 265
    term                     go to state 230
    factor                   go to state 231
    prefixOP                 go to state 232
    method_invocation        go to state 233
    conditional_statement    go to state 266
    loop_statement           go to state 267
    while                    go to state 268
    for                      go to state 269
    return_statement         go to state 270


State 263

  146 statement: simple_statement •

    $default  reduce using rule 146 (statement)


State 264

  164 simple_statement: name • ASSIGN expression SEMICOLON
  202 factor: name • postfixOP
  213 method_invocation: name • LPAREN arguments RPAREN

    INC     shift, and go to state 275
    DEC     shift, and go to state 276
    ASSIGN  shift, and go to state 308
    LPAREN  shift, and go to state 201

    postfixOP  go to state 279


State 265

  167 simple_statement: expression • end_of_line
  189 expression: expression • ADD term
  190           | expression • MINUS term

    error      shift, and go to state 74
    ADD        shift, and go to state 280
    MINUS      shift, and go to state 281
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 309


State 266

  147 statement: conditional_statement •

    $default  reduce using rule 147 (statement)


State 267

  148 statement: loop_statement •

    $default  reduce using rule 148 (statement)


State 268

  231 loop_statement: while •

    $default  reduce using rule 231 (loop_statement)


State 269

  232 loop_statement: for •

    $default  reduce using rule 232 (loop_statement)


State 270

  156 compound_statement_body: return_statement •

    $default  reduce using rule 156 (compound_statement_body)


State 271

  131 instance_fields: type LBRACKET RBRACKET ID_TOK ASSIGN NEW type LBRACKET • INT_LIT RBRACKET end_of_line

    INT_LIT  shift, and go to state 310


State 272

  173 array_item: ID_TOK LBRACKET INT_LIT RBRACKET •

    $default  reduce using rule 173 (array_item)


State 273

  174 array_item: ID_TOK LBRACKET ID_TOK RBRACKET •

    $default  reduce using rule 174 (array_item)


State 274

  189 expression: expression • ADD term
  190           | expression • MINUS term
  200 factor: LPAREN expression • RPAREN

    ADD     shift, and go to state 280
    MINUS   shift, and go to state 281
    RPAREN  shift, and go to state 311


State 275

  211 postfixOP: INC •

    $default  reduce using rule 211 (postfixOP)


State 276

  212 postfixOP: DEC •

    $default  reduce using rule 212 (postfixOP)


State 277

  203 factor: INT_LIT postfixOP •

    $default  reduce using rule 203 (factor)


State 278

  171 field_or_array_item: ID_TOK DOT • ID_TOK
  205 factor: ID_TOK DOT • ID_TOK

    ID_TOK  shift, and go to state 312


State 279

  202 factor: name postfixOP •

    $default  reduce using rule 202 (factor)


State 280

  189 expression: expression ADD • term

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    term                 go to state 313
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 281

  190 expression: expression MINUS • term

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    term                 go to state 314
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 282

  192 term: term MUL • factor

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    factor               go to state 315
    prefixOP             go to state 232
    method_invocation    go to state 233


State 283

  193 term: term DIV • factor

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    factor               go to state 316
    prefixOP             go to state 232
    method_invocation    go to state 233


State 284

  169 name: ID_TOK •
  171 field_or_array_item: ID_TOK • DOT ID_TOK
  173 array_item: ID_TOK • LBRACKET INT_LIT RBRACKET
  174           | ID_TOK • LBRACKET ID_TOK RBRACKET

    LBRACKET  shift, and go to state 199
    DOT       shift, and go to state 200

    $default  reduce using rule 169 (name)


State 285

  201 factor: prefixOP name •

    $default  reduce using rule 201 (factor)


State 286

  213 method_invocation: name LPAREN arguments RPAREN •

    $default  reduce using rule 213 (method_invocation)


State 287

  217 arg_list: arg_list COMMA • expression

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 317
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 288

  133 method: method_modifier type ID_TOK $@7 LPAREN formal_arguments RPAREN compound_statement •

    $default  reduce using rule 133 (method)


State 289

  163 object_declaration: ID_TOK ID_TOK $@12 ASSIGN NEW ID_TOK LPAREN RPAREN end_of_line •

    $default  reduce using rule 163 (object_declaration)


State 290

  159 compound_statement_body: error SEMICOLON •

    $default  reduce using rule 159 (compound_statement_body)


State 291

  234 while: error RPAREN •

    $default  reduce using rule 234 (while)


State 292

  234 while: error • RPAREN

    RPAREN  shift, and go to state 291


State 293

  149 statement: ELSE statement •

    $default  reduce using rule 149 (statement)


State 294

    9 variable_declaration: FINAL type • id_list_const SEMICOLON

    ID_TOK  shift, and go to state 62

    id_list_const  go to state 318


State 295

  235 for: FOR LPAREN • forInitOpt SEMICOLON boolean_expr SEMICOLON forUpdateOpt RPAREN if_else_loop_statement

    INT     shift, and go to state 319
    ID_TOK  shift, and go to state 284

    $default  reduce using rule 236 (forInitOpt)

    name                 go to state 320
    field_or_array_item  go to state 184
    array_item           go to state 185
    forInitOpt           go to state 321
    init_item            go to state 322
    init_list            go to state 323


State 296

  218 conditional_statement: IF LPAREN • boolean_expr RPAREN if_else_loop_statement
  219                      | IF LPAREN • boolean_expr RPAREN if_else_loop_statement else
  220                      | IF LPAREN • error RPAREN

    error       shift, and go to state 324
    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 325
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233
    boolean_expr         go to state 326


State 297

  165 simple_statement: PRINT LPAREN • expression RPAREN end_of_line

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 327
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 298

  189 expression: expression • ADD term
  190           | expression • MINUS term
  244 return_statement: RETURN expression • SEMICOLON

    ADD        shift, and go to state 280
    MINUS      shift, and go to state 281
    SEMICOLON  shift, and go to state 328


State 299

    5 variable_declaration: STATIC type • id_list SEMICOLON

    ID_TOK  shift, and go to state 64

    id_item  go to state 56
    id_list  go to state 329


State 300

  233 while: WHILE LPAREN • boolean_expr RPAREN if_else_loop_statement

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 325
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233
    boolean_expr         go to state 330


State 301

  166 simple_statement: READ LPAREN • name RPAREN end_of_line

    ID_TOK  shift, and go to state 284

    name                 go to state 331
    field_or_array_item  go to state 184
    array_item           go to state 185


State 302

  153 compound_statement_body: variable_declaration compound_statement_body •

    $default  reduce using rule 153 (compound_statement_body)


State 303

    8 variable_declaration: type LBRACKET • RBRACKET ID_TOK $@1 ASSIGN NEW type LBRACKET INT_LIT RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 332


State 304

    6 variable_declaration: type id_list • end_of_line

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 333


State 305

  154 compound_statement_body: statement compound_statement_body •

    $default  reduce using rule 154 (compound_statement_body)


State 306

  151 compound_statement: LBRACE $@10 compound_statement_body RBRACE •

    $default  reduce using rule 151 (compound_statement)


State 307

  155 compound_statement_body: object_declaration compound_statement_body •

    $default  reduce using rule 155 (compound_statement_body)


State 308

  164 simple_statement: name ASSIGN • expression SEMICOLON

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 334
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 309

  167 simple_statement: expression end_of_line •

    $default  reduce using rule 167 (simple_statement)


State 310

  131 instance_fields: type LBRACKET RBRACKET ID_TOK ASSIGN NEW type LBRACKET INT_LIT • RBRACKET end_of_line

    RBRACKET  shift, and go to state 335


State 311

  200 factor: LPAREN expression RPAREN •

    $default  reduce using rule 200 (factor)


State 312

  171 field_or_array_item: ID_TOK DOT ID_TOK •
  205 factor: ID_TOK DOT ID_TOK •

    INC       reduce using rule 171 (field_or_array_item)
    DEC       reduce using rule 171 (field_or_array_item)
    ASSIGN    reduce using rule 171 (field_or_array_item)
    LPAREN    reduce using rule 171 (field_or_array_item)
    $default  reduce using rule 205 (factor)


State 313

  189 expression: expression ADD term •
  192 term: term • MUL factor
  193     | term • DIV factor

    MUL  shift, and go to state 282
    DIV  shift, and go to state 283

    $default  reduce using rule 189 (expression)


State 314

  190 expression: expression MINUS term •
  192 term: term • MUL factor
  193     | term • DIV factor

    MUL  shift, and go to state 282
    DIV  shift, and go to state 283

    $default  reduce using rule 190 (expression)


State 315

  192 term: term MUL factor •

    $default  reduce using rule 192 (term)


State 316

  193 term: term DIV factor •

    $default  reduce using rule 193 (term)


State 317

  189 expression: expression • ADD term
  190           | expression • MINUS term
  217 arg_list: arg_list COMMA expression •

    ADD    shift, and go to state 280
    MINUS  shift, and go to state 281

    $default  reduce using rule 217 (arg_list)


State 318

    9 variable_declaration: FINAL type id_list_const • SEMICOLON
  105 id_list_const: id_list_const • COMMA ID_TOK $@4 ASSIGN const_expr

    COMMA      shift, and go to state 79
    SEMICOLON  shift, and go to state 336


State 319

  239 init_item: INT • ID_TOK ASSIGN expression

    ID_TOK  shift, and go to state 337


State 320

  238 init_item: name • ASSIGN expression

    ASSIGN  shift, and go to state 338


State 321

  235 for: FOR LPAREN forInitOpt • SEMICOLON boolean_expr SEMICOLON forUpdateOpt RPAREN if_else_loop_statement

    SEMICOLON  shift, and go to state 339


State 322

  240 init_list: init_item •

    $default  reduce using rule 240 (init_list)


State 323

  237 forInitOpt: init_list •
  241 init_list: init_list • COMMA init_item

    COMMA  shift, and go to state 340

    $default  reduce using rule 237 (forInitOpt)


State 324

  220 conditional_statement: IF LPAREN error • RPAREN

    RPAREN  shift, and go to state 341


State 325

  189 expression: expression • ADD term
  190           | expression • MINUS term
  222 boolean_expr: expression • infixOP expression

    ADD    shift, and go to state 280
    MINUS  shift, and go to state 281
    EQ     shift, and go to state 342
    NE     shift, and go to state 343
    LT     shift, and go to state 344
    LE     shift, and go to state 345
    GT     shift, and go to state 346
    GE     shift, and go to state 347

    infixOP  go to state 348


State 326

  218 conditional_statement: IF LPAREN boolean_expr • RPAREN if_else_loop_statement
  219                      | IF LPAREN boolean_expr • RPAREN if_else_loop_statement else

    RPAREN  shift, and go to state 349


State 327

  165 simple_statement: PRINT LPAREN expression • RPAREN end_of_line
  189 expression: expression • ADD term
  190           | expression • MINUS term

    ADD     shift, and go to state 280
    MINUS   shift, and go to state 281
    RPAREN  shift, and go to state 350


State 328

  244 return_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 244 (return_statement)


State 329

    5 variable_declaration: STATIC type id_list • SEMICOLON

    SEMICOLON  shift, and go to state 351


State 330

  233 while: WHILE LPAREN boolean_expr • RPAREN if_else_loop_statement

    RPAREN  shift, and go to state 352


State 331

  166 simple_statement: READ LPAREN name • RPAREN end_of_line

    RPAREN  shift, and go to state 353


State 332

    8 variable_declaration: type LBRACKET RBRACKET • ID_TOK $@1 ASSIGN NEW type LBRACKET INT_LIT RBRACKET SEMICOLON

    ID_TOK  shift, and go to state 354


State 333

    6 variable_declaration: type id_list end_of_line •

    $default  reduce using rule 6 (variable_declaration)


State 334

  164 simple_statement: name ASSIGN expression • SEMICOLON
  189 expression: expression • ADD term
  190           | expression • MINUS term

    ADD        shift, and go to state 280
    MINUS      shift, and go to state 281
    SEMICOLON  shift, and go to state 355


State 335

  131 instance_fields: type LBRACKET RBRACKET ID_TOK ASSIGN NEW type LBRACKET INT_LIT RBRACKET • end_of_line

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 356


State 336

    9 variable_declaration: FINAL type id_list_const SEMICOLON •

    $default  reduce using rule 9 (variable_declaration)


State 337

  239 init_item: INT ID_TOK • ASSIGN expression

    ASSIGN  shift, and go to state 357


State 338

  238 init_item: name ASSIGN • expression

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 358
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 339

  235 for: FOR LPAREN forInitOpt SEMICOLON • boolean_expr SEMICOLON forUpdateOpt RPAREN if_else_loop_statement

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 325
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233
    boolean_expr         go to state 359


State 340

  241 init_list: init_list COMMA • init_item

    INT     shift, and go to state 319
    ID_TOK  shift, and go to state 284

    name                 go to state 320
    field_or_array_item  go to state 184
    array_item           go to state 185
    init_item            go to state 360


State 341

  220 conditional_statement: IF LPAREN error RPAREN •

    $default  reduce using rule 220 (conditional_statement)


State 342

  223 infixOP: EQ •

    $default  reduce using rule 223 (infixOP)


State 343

  224 infixOP: NE •

    $default  reduce using rule 224 (infixOP)


State 344

  225 infixOP: LT •

    $default  reduce using rule 225 (infixOP)


State 345

  226 infixOP: LE •

    $default  reduce using rule 226 (infixOP)


State 346

  227 infixOP: GT •

    $default  reduce using rule 227 (infixOP)


State 347

  228 infixOP: GE •

    $default  reduce using rule 228 (infixOP)


State 348

  222 boolean_expr: expression infixOP • expression

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 361
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 349

  218 conditional_statement: IF LPAREN boolean_expr RPAREN • if_else_loop_statement
  219                      | IF LPAREN boolean_expr RPAREN • if_else_loop_statement else

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    PRINT       shift, and go to state 249
    TRUE        shift, and go to state 221
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    READ        shift, and go to state 254
    ID_TOK      shift, and go to state 226

    compound_statement      go to state 362
    simple_statement        go to state 363
    name                    go to state 264
    field_or_array_item     go to state 184
    array_item              go to state 228
    expression              go to state 265
    term                    go to state 230
    factor                  go to state 231
    prefixOP                go to state 232
    method_invocation       go to state 233
    if_else_loop_statement  go to state 364


State 350

  165 simple_statement: PRINT LPAREN expression RPAREN • end_of_line

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 365


State 351

    5 variable_declaration: STATIC type id_list SEMICOLON •

    $default  reduce using rule 5 (variable_declaration)


State 352

  233 while: WHILE LPAREN boolean_expr RPAREN • if_else_loop_statement

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    PRINT       shift, and go to state 249
    TRUE        shift, and go to state 221
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    READ        shift, and go to state 254
    ID_TOK      shift, and go to state 226

    compound_statement      go to state 362
    simple_statement        go to state 363
    name                    go to state 264
    field_or_array_item     go to state 184
    array_item              go to state 228
    expression              go to state 265
    term                    go to state 230
    factor                  go to state 231
    prefixOP                go to state 232
    method_invocation       go to state 233
    if_else_loop_statement  go to state 366


State 353

  166 simple_statement: READ LPAREN name RPAREN • end_of_line

    error      shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    end_of_line  go to state 367


State 354

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK • $@1 ASSIGN NEW type LBRACKET INT_LIT RBRACKET SEMICOLON

    $default  reduce using rule 7 ($@1)

    $@1  go to state 368


State 355

  164 simple_statement: name ASSIGN expression SEMICOLON •

    $default  reduce using rule 164 (simple_statement)


State 356

  131 instance_fields: type LBRACKET RBRACKET ID_TOK ASSIGN NEW type LBRACKET INT_LIT RBRACKET end_of_line •

    $default  reduce using rule 131 (instance_fields)


State 357

  239 init_item: INT ID_TOK ASSIGN • expression

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    TRUE        shift, and go to state 221
    LPAREN      shift, and go to state 222
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    ID_TOK      shift, and go to state 226

    name                 go to state 227
    field_or_array_item  go to state 184
    array_item           go to state 228
    expression           go to state 369
    term                 go to state 230
    factor               go to state 231
    prefixOP             go to state 232
    method_invocation    go to state 233


State 358

  189 expression: expression • ADD term
  190           | expression • MINUS term
  238 init_item: name ASSIGN expression •

    ADD    shift, and go to state 280
    MINUS  shift, and go to state 281

    $default  reduce using rule 238 (init_item)


State 359

  235 for: FOR LPAREN forInitOpt SEMICOLON boolean_expr • SEMICOLON forUpdateOpt RPAREN if_else_loop_statement

    SEMICOLON  shift, and go to state 370


State 360

  241 init_list: init_list COMMA init_item •

    $default  reduce using rule 241 (init_list)


State 361

  189 expression: expression • ADD term
  190           | expression • MINUS term
  222 boolean_expr: expression infixOP expression •

    ADD    shift, and go to state 280
    MINUS  shift, and go to state 281

    $default  reduce using rule 222 (boolean_expr)


State 362

  230 if_else_loop_statement: compound_statement •

    $default  reduce using rule 230 (if_else_loop_statement)


State 363

  229 if_else_loop_statement: simple_statement •

    $default  reduce using rule 229 (if_else_loop_statement)


State 364

  218 conditional_statement: IF LPAREN boolean_expr RPAREN if_else_loop_statement •
  219                      | IF LPAREN boolean_expr RPAREN if_else_loop_statement • else

    ELSE  shift, and go to state 371

    $default  reduce using rule 218 (conditional_statement)

    else  go to state 372


State 365

  165 simple_statement: PRINT LPAREN expression RPAREN end_of_line •

    $default  reduce using rule 165 (simple_statement)


State 366

  233 while: WHILE LPAREN boolean_expr RPAREN if_else_loop_statement •

    $default  reduce using rule 233 (while)


State 367

  166 simple_statement: READ LPAREN name RPAREN end_of_line •

    $default  reduce using rule 166 (simple_statement)


State 368

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 • ASSIGN NEW type LBRACKET INT_LIT RBRACKET SEMICOLON

    ASSIGN  shift, and go to state 373


State 369

  189 expression: expression • ADD term
  190           | expression • MINUS term
  239 init_item: INT ID_TOK ASSIGN expression •

    ADD    shift, and go to state 280
    MINUS  shift, and go to state 281

    $default  reduce using rule 239 (init_item)


State 370

  235 for: FOR LPAREN forInitOpt SEMICOLON boolean_expr SEMICOLON • forUpdateOpt RPAREN if_else_loop_statement

    ID_TOK  shift, and go to state 284

    name                 go to state 374
    field_or_array_item  go to state 184
    array_item           go to state 185
    forUpdateOpt         go to state 375


State 371

  221 else: ELSE • if_else_loop_statement

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    PRINT       shift, and go to state 249
    TRUE        shift, and go to state 221
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    READ        shift, and go to state 254
    ID_TOK      shift, and go to state 226

    compound_statement      go to state 362
    simple_statement        go to state 363
    name                    go to state 264
    field_or_array_item     go to state 184
    array_item              go to state 228
    expression              go to state 265
    term                    go to state 230
    factor                  go to state 231
    prefixOP                go to state 232
    method_invocation       go to state 233
    if_else_loop_statement  go to state 376


State 372

  219 conditional_statement: IF LPAREN boolean_expr RPAREN if_else_loop_statement else •

    $default  reduce using rule 219 (conditional_statement)


State 373

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN • NEW type LBRACKET INT_LIT RBRACKET SEMICOLON

    NEW  shift, and go to state 377


State 374

  242 forUpdateOpt: name • INC
  243             | name • DEC

    INC  shift, and go to state 378
    DEC  shift, and go to state 379


State 375

  235 for: FOR LPAREN forInitOpt SEMICOLON boolean_expr SEMICOLON forUpdateOpt • RPAREN if_else_loop_statement

    RPAREN  shift, and go to state 380


State 376

  221 else: ELSE if_else_loop_statement •

    $default  reduce using rule 221 (else)


State 377

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW • type LBRACKET INT_LIT RBRACKET SEMICOLON

    BOOL    shift, and go to state 27
    FLOAT   shift, and go to state 29
    INT     shift, and go to state 30
    LONG    shift, and go to state 31
    SHORT   shift, and go to state 35
    STRING  shift, and go to state 37
    VOID    shift, and go to state 38
    CHAR    shift, and go to state 39

    type  go to state 381


State 378

  242 forUpdateOpt: name INC •

    $default  reduce using rule 242 (forUpdateOpt)


State 379

  243 forUpdateOpt: name DEC •

    $default  reduce using rule 243 (forUpdateOpt)


State 380

  235 for: FOR LPAREN forInitOpt SEMICOLON boolean_expr SEMICOLON forUpdateOpt RPAREN • if_else_loop_statement

    ADD         shift, and go to state 216
    INC         shift, and go to state 217
    MINUS       shift, and go to state 218
    DEC         shift, and go to state 219
    FALSE       shift, and go to state 220
    PRINT       shift, and go to state 249
    TRUE        shift, and go to state 221
    SEMICOLON   shift, and go to state 253
    LPAREN      shift, and go to state 222
    LBRACE      shift, and go to state 195
    INT_LIT     shift, and go to state 223
    FLOAT_LIT   shift, and go to state 224
    STRING_LIT  shift, and go to state 225
    READ        shift, and go to state 254
    ID_TOK      shift, and go to state 226

    compound_statement      go to state 362
    simple_statement        go to state 363
    name                    go to state 264
    field_or_array_item     go to state 184
    array_item              go to state 228
    expression              go to state 265
    term                    go to state 230
    factor                  go to state 231
    prefixOP                go to state 232
    method_invocation       go to state 233
    if_else_loop_statement  go to state 382


State 381

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW type • LBRACKET INT_LIT RBRACKET SEMICOLON

    LBRACKET  shift, and go to state 383


State 382

  235 for: FOR LPAREN forInitOpt SEMICOLON boolean_expr SEMICOLON forUpdateOpt RPAREN if_else_loop_statement •

    $default  reduce using rule 235 (for)


State 383

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW type LBRACKET • INT_LIT RBRACKET SEMICOLON

    INT_LIT  shift, and go to state 384


State 384

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW type LBRACKET INT_LIT • RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 385


State 385

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW type LBRACKET INT_LIT RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 386


State 386

    8 variable_declaration: type LBRACKET RBRACKET ID_TOK $@1 ASSIGN NEW type LBRACKET INT_LIT RBRACKET SEMICOLON •

    $default  reduce using rule 8 (variable_declaration)
